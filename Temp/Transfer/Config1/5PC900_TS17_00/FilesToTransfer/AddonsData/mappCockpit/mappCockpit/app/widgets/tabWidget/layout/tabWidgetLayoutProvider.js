define(["require", "exports", "../tabWidget", "../tabWidgetStyleProvider"], function (require, exports, tabWidget_1, tabWidgetStyleProvider_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var TabWidgetLayoutProvider = /** @class */ (function () {
        function TabWidgetLayoutProvider() {
        }
        TabWidgetLayoutProvider.getInstance = function () {
            if (!TabWidgetLayoutProvider.instance) {
                TabWidgetLayoutProvider.instance = new TabWidgetLayoutProvider();
                // ... any one time initialization goes here ...
            }
            return TabWidgetLayoutProvider.instance;
        };
        TabWidgetLayoutProvider.prototype.getTabOverviewDropdownTemplate = function (layoutContainerId) {
            var lineStyleClass = tabWidgetStyleProvider_1.TabWidgetStyleProvider.getInstance().getTabOverviewDropdownLineStyleClass(layoutContainerId);
            var html = "\n                <div style=\"background-color: var(--main-black);\">\n                <div class=\"ename\"> " +
                "${text} " +
                "<div style=\"display:none\">" +
                "${id}" +
                "</div>\n                            <div class=\"" + lineStyleClass + "\"> <button id=\"" + layoutContainerId + "_dropdownList_button_" + "${id}" + "\"></button></div>\n                        </div>\n                </div>";
            return html;
        };
        TabWidgetLayoutProvider.prototype.getTabOverviewFooterButtonsTemplate = function (layoutContainerId) {
            var closeAllStyleClass = tabWidgetStyleProvider_1.TabWidgetStyleProvider.getInstance().getTabOverviewDropdownCloseAllStyleClass(layoutContainerId);
            var html = "<button class = " + closeAllStyleClass + " id='" + layoutContainerId + "_dropdown_closeAll" + "'> Close all </button> <button id='" + layoutContainerId + "_dropdown_closeAllOther" + "'> Close all other </button>";
            return html;
        };
        TabWidgetLayoutProvider.prototype.getFlexTabDropdownLayout = function (layoutContainerId) {
            var html = "<input id=\"" + layoutContainerId + "_dropdown" + "\" /> \n            <div id = \"" + layoutContainerId + "_dropdownList\">    \n                <ul>\n                    \n                </ul>\n                \n            </div>\n         ";
            return html;
        };
        TabWidgetLayoutProvider.prototype.getTabBarLayout = function (layoutContainerId, leftTabContainerId, flexibleTabContainerId, rightTabContainerId) {
            var html = "\n            <div id=\"" + layoutContainerId + "\" class=\"" + tabWidget_1.topBarClassName + "\">  \n                <div id=\"" + leftTabContainerId + "\" class=\"topBarTabContainerLeft\"> </div>\n                <div id=\"" + flexibleTabContainerId + "\" class=\"topBarFlexibleTabContainer\"> \n                   <div id=\"" + flexibleTabContainerId + "_flexBox\" class=\"topBarFlexibleTabContainer_flexBox\"> </div>\n                </div>\n                <div id=\"" + rightTabContainerId + "\" class=\"topBarTabContainerRight\"></div>\n            </div>\n        ";
            return html;
        };
        TabWidgetLayoutProvider.prototype.getFlexTabLayout = function (newLayoutElementId) {
            var navTag = "<div id=\"" + newLayoutElementId + "_tag\" class=\"topBarNavigationElement tabWidgetButton\"> </div>";
            var navIcon = "<div id=\"" + newLayoutElementId + "_icon\" class=\"icon48 topBarNavigationElement\"><img src=\"\"></div>";
            var navHandle = "<div id=\"" + newLayoutElementId + "_handle\" class=\"icon36 topBarNavigationElement\"><img src=\"widgets/tabWidget/style/images/IconTabLeft.svg\"></div>";
            return navHandle + navTag + navIcon;
        };
        return TabWidgetLayoutProvider;
    }());
    exports.TabWidgetLayoutProvider = TabWidgetLayoutProvider;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiV2lkZ2V0TGF5b3V0UHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL3dpZGdldHMvdGFiV2lkZ2V0L2xheW91dC90YWJXaWRnZXRMYXlvdXRQcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7SUFHQTtRQUFBO1FBb0VBLENBQUM7UUFoRVUsbUNBQVcsR0FBbEI7WUFDSSxJQUFJLENBQUMsdUJBQXVCLENBQUMsUUFBUSxFQUFFO2dCQUNuQyx1QkFBdUIsQ0FBQyxRQUFRLEdBQUcsSUFBSSx1QkFBdUIsRUFBRSxDQUFDO2dCQUNqRSxnREFBZ0Q7YUFDbkQ7WUFDRCxPQUFPLHVCQUF1QixDQUFDLFFBQVEsQ0FBQztRQUM1QyxDQUFDO1FBRUQsZ0VBQThCLEdBQTlCLFVBQStCLGlCQUEwQjtZQUNyRCxJQUFJLGNBQWMsR0FBRywrQ0FBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxvQ0FBb0MsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQ2xILElBQUksSUFBSSxHQUFJLGdIQUVpQjtnQkFDVCxVQUFVO2dCQUNWLDhCQUE0QjtnQkFDeEIsT0FBTztnQkFDWCxtREFDYSxHQUFDLGNBQWMsR0FBQyxtQkFBaUIsR0FBQyxpQkFBaUIsR0FBQyx1QkFBdUIsR0FBQyxPQUFPLEdBQUMsNEVBRXRHLENBQUM7WUFDaEIsT0FBTyxJQUFJLENBQUM7UUFDaEIsQ0FBQztRQUVELHFFQUFtQyxHQUFuQyxVQUFvQyxpQkFBeUI7WUFDekQsSUFBSSxrQkFBa0IsR0FBRywrQ0FBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyx3Q0FBd0MsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQzFILElBQUksSUFBSSxHQUFHLGtCQUFrQixHQUFFLGtCQUFrQixHQUFFLE9BQU8sR0FBQyxpQkFBaUIsR0FBQyxvQkFBb0IsR0FBQyxxQ0FBcUMsR0FBQyxpQkFBaUIsR0FBQyx5QkFBeUIsR0FBQyw4QkFBOEIsQ0FBQztZQUNuTixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDO1FBRUQsMERBQXdCLEdBQXhCLFVBQXlCLGlCQUF5QjtZQUM5QyxJQUFJLElBQUksR0FBRyxjQUFhLEdBQUUsaUJBQWlCLEdBQUcsV0FBVyxHQUFFLGtDQUMzQyxHQUFDLGlCQUFpQixHQUFHLDBJQU1uQyxDQUFBO1lBQ0YsT0FBTyxJQUFJLENBQUM7UUFDaEIsQ0FBQztRQUVELGlEQUFlLEdBQWYsVUFBZ0IsaUJBQWlCLEVBQUMsa0JBQWtCLEVBQUMsc0JBQXNCLEVBQUMsbUJBQW1CO1lBQzNGLElBQUksSUFBSSxHQUFFLDBCQUNJLEdBQUUsaUJBQWlCLEdBQUUsYUFBVyxHQUFDLDJCQUFlLEdBQUMsbUNBQzdDLEdBQUUsa0JBQWtCLEdBQUUseUVBQ3RCLEdBQUUsc0JBQXNCLEdBQUUsMEVBQ3ZCLEdBQUUsc0JBQXNCLEdBQUUscUhBRTdCLEdBQUUsbUJBQW1CLEdBQUUsMkVBRXhDLENBQUM7WUFDRixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDO1FBRUQsa0RBQWdCLEdBQWhCLFVBQWlCLGtCQUEwQjtZQUN2QyxJQUFJLE1BQU0sR0FBRyxZQUFXLEdBQUUsa0JBQWtCLEdBQUMsa0VBQStELENBQUE7WUFDNUcsSUFBSSxPQUFPLEdBQUUsWUFBVyxHQUFFLGtCQUFrQixHQUFDLHVFQUFrRSxDQUFBO1lBQy9HLElBQUksU0FBUyxHQUFHLFlBQVcsR0FBRSxrQkFBa0IsR0FBQyx1SEFBa0gsQ0FBQTtZQUVsSyxPQUFPLFNBQVMsR0FBRSxNQUFNLEdBQUcsT0FBTyxDQUFDO1FBQ3ZDLENBQUM7UUFJTCw4QkFBQztJQUFELENBQUMsQUFwRUQsSUFvRUM7SUFwRVksMERBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9wQmFyQ2xhc3NOYW1lIH0gZnJvbSBcIi4uL3RhYldpZGdldFwiO1xyXG5pbXBvcnQgeyBUYWJXaWRnZXRTdHlsZVByb3ZpZGVyIH0gZnJvbSBcIi4uL3RhYldpZGdldFN0eWxlUHJvdmlkZXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUYWJXaWRnZXRMYXlvdXRQcm92aWRlcntcclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogVGFiV2lkZ2V0TGF5b3V0UHJvdmlkZXI7XHJcbiAgXHJcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XHJcbiAgICAgICAgaWYgKCFUYWJXaWRnZXRMYXlvdXRQcm92aWRlci5pbnN0YW5jZSkge1xyXG4gICAgICAgICAgICBUYWJXaWRnZXRMYXlvdXRQcm92aWRlci5pbnN0YW5jZSA9IG5ldyBUYWJXaWRnZXRMYXlvdXRQcm92aWRlcigpO1xyXG4gICAgICAgICAgICAvLyAuLi4gYW55IG9uZSB0aW1lIGluaXRpYWxpemF0aW9uIGdvZXMgaGVyZSAuLi5cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFRhYldpZGdldExheW91dFByb3ZpZGVyLmluc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFRhYk92ZXJ2aWV3RHJvcGRvd25UZW1wbGF0ZShsYXlvdXRDb250YWluZXJJZCA6IHN0cmluZyl7XHJcbiAgICAgICAgbGV0IGxpbmVTdHlsZUNsYXNzID0gVGFiV2lkZ2V0U3R5bGVQcm92aWRlci5nZXRJbnN0YW5jZSgpLmdldFRhYk92ZXJ2aWV3RHJvcGRvd25MaW5lU3R5bGVDbGFzcyhsYXlvdXRDb250YWluZXJJZCk7XHJcbiAgICAgICAgbGV0IGh0bWwgPSAgYFxyXG4gICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tYmxhY2spO1wiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVuYW1lXCI+IGArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiR7dGV4dH0gXCIrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgPGRpdiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPmArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIke2lkfVwiK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImArbGluZVN0eWxlQ2xhc3MrYFwiPiA8YnV0dG9uIGlkPVwiYCtsYXlvdXRDb250YWluZXJJZCtgX2Ryb3Bkb3duTGlzdF9idXR0b25fYCtcIiR7aWR9XCIrYFwiPjwvYnV0dG9uPjwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PmA7XHJcbiAgICAgICAgcmV0dXJuIGh0bWw7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VGFiT3ZlcnZpZXdGb290ZXJCdXR0b25zVGVtcGxhdGUobGF5b3V0Q29udGFpbmVySWQ6IHN0cmluZyl7XHJcbiAgICAgICAgbGV0IGNsb3NlQWxsU3R5bGVDbGFzcyA9IFRhYldpZGdldFN0eWxlUHJvdmlkZXIuZ2V0SW5zdGFuY2UoKS5nZXRUYWJPdmVydmlld0Ryb3Bkb3duQ2xvc2VBbGxTdHlsZUNsYXNzKGxheW91dENvbnRhaW5lcklkKTtcclxuICAgICAgICBsZXQgaHRtbCA9IFwiPGJ1dHRvbiBjbGFzcyA9IFwiKyBjbG9zZUFsbFN0eWxlQ2xhc3MgK1wiIGlkPSdcIitsYXlvdXRDb250YWluZXJJZCtcIl9kcm9wZG93bl9jbG9zZUFsbFwiK1wiJz4gQ2xvc2UgYWxsIDwvYnV0dG9uPiA8YnV0dG9uIGlkPSdcIitsYXlvdXRDb250YWluZXJJZCtcIl9kcm9wZG93bl9jbG9zZUFsbE90aGVyXCIrXCInPiBDbG9zZSBhbGwgb3RoZXIgPC9idXR0b24+XCI7XHJcbiAgICAgICAgcmV0dXJuIGh0bWw7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RmxleFRhYkRyb3Bkb3duTGF5b3V0KGxheW91dENvbnRhaW5lcklkOiBzdHJpbmcpe1xyXG4gICAgICAgIGxldCBodG1sID0gYDxpbnB1dCBpZD1cImArIGxheW91dENvbnRhaW5lcklkICsgXCJfZHJvcGRvd25cIiArYFwiIC8+IFxyXG4gICAgICAgICAgICA8ZGl2IGlkID0gXCJgK2xheW91dENvbnRhaW5lcklkICsgYF9kcm9wZG93bkxpc3RcIj4gICAgXHJcbiAgICAgICAgICAgICAgICA8dWw+XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA8L3VsPlxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICBgXHJcbiAgICAgICAgcmV0dXJuIGh0bWw7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VGFiQmFyTGF5b3V0KGxheW91dENvbnRhaW5lcklkLGxlZnRUYWJDb250YWluZXJJZCxmbGV4aWJsZVRhYkNvbnRhaW5lcklkLHJpZ2h0VGFiQ29udGFpbmVySWQpe1xyXG4gICAgICAgIGxldCBodG1sID1gXHJcbiAgICAgICAgICAgIDxkaXYgaWQ9XCJgKyBsYXlvdXRDb250YWluZXJJZCArYFwiIGNsYXNzPVwiYCt0b3BCYXJDbGFzc05hbWUrYFwiPiAgXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiYCsgbGVmdFRhYkNvbnRhaW5lcklkICtgXCIgY2xhc3M9XCJ0b3BCYXJUYWJDb250YWluZXJMZWZ0XCI+IDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cImArIGZsZXhpYmxlVGFiQ29udGFpbmVySWQgK2BcIiBjbGFzcz1cInRvcEJhckZsZXhpYmxlVGFiQ29udGFpbmVyXCI+IFxyXG4gICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cImArIGZsZXhpYmxlVGFiQ29udGFpbmVySWQgK2BfZmxleEJveFwiIGNsYXNzPVwidG9wQmFyRmxleGlibGVUYWJDb250YWluZXJfZmxleEJveFwiPiA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBpZD1cImArIHJpZ2h0VGFiQ29udGFpbmVySWQgK2BcIiBjbGFzcz1cInRvcEJhclRhYkNvbnRhaW5lclJpZ2h0XCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIGA7XHJcbiAgICAgICAgcmV0dXJuIGh0bWw7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RmxleFRhYkxheW91dChuZXdMYXlvdXRFbGVtZW50SWQ6IHN0cmluZykgOiBzdHJpbmd7XHJcbiAgICAgICAgbGV0IG5hdlRhZyA9IGA8ZGl2IGlkPVwiYCsgbmV3TGF5b3V0RWxlbWVudElkK2BfdGFnXCIgY2xhc3M9XCJ0b3BCYXJOYXZpZ2F0aW9uRWxlbWVudCB0YWJXaWRnZXRCdXR0b25cIj4gPC9kaXY+YFxyXG4gICAgICAgIGxldCBuYXZJY29uPSBgPGRpdiBpZD1cImArIG5ld0xheW91dEVsZW1lbnRJZCtgX2ljb25cIiBjbGFzcz1cImljb240OCB0b3BCYXJOYXZpZ2F0aW9uRWxlbWVudFwiPjxpbWcgc3JjPVwiXCI+PC9kaXY+YFxyXG4gICAgICAgIGxldCBuYXZIYW5kbGUgPSBgPGRpdiBpZD1cImArIG5ld0xheW91dEVsZW1lbnRJZCtgX2hhbmRsZVwiIGNsYXNzPVwiaWNvbjM2IHRvcEJhck5hdmlnYXRpb25FbGVtZW50XCI+PGltZyBzcmM9XCJ3aWRnZXRzL3RhYldpZGdldC9zdHlsZS9pbWFnZXMvSWNvblRhYkxlZnQuc3ZnXCI+PC9kaXY+YFxyXG5cclxuICAgICAgICByZXR1cm4gbmF2SGFuZGxlKyBuYXZUYWcgKyBuYXZJY29uO1xyXG4gICAgfVxyXG5cclxuICAgIFxyXG5cclxufVxyXG4iXX0=